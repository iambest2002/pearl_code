{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["\r\n\r\nvar $defineProperty = require('es-define-property');\r\n\r\nvar $SyntaxError = require('es-errors/syntax');\r\nvar $TypeError = require('es-errors/type');\r\n\r\nvar gopd = require('gopd');\r\n\r\n/** @type {import('.')} */\r\nmodule.exports = function defineDataProperty(\r\n\tobj,\r\n\tproperty,\r\n\tvalue\r\n) {\r\n\tif (!obj || (typeof obj !== 'object' && typeof obj !== 'function')) {\r\n\t\tthrow new $TypeError('`obj` must be an object or a function`');\r\n\t}\r\n\tif (typeof property !== 'string' && typeof property !== 'symbol') {\r\n\t\tthrow new $TypeError('`property` must be a string or a symbol`');\r\n\t}\r\n\tif (arguments.length > 3 && typeof arguments[3] !== 'boolean' && arguments[3] !== null) {\r\n\t\tthrow new $TypeError('`nonEnumerable`, if provided, must be a boolean or null');\r\n\t}\r\n\tif (arguments.length > 4 && typeof arguments[4] !== 'boolean' && arguments[4] !== null) {\r\n\t\tthrow new $TypeError('`nonWritable`, if provided, must be a boolean or null');\r\n\t}\r\n\tif (arguments.length > 5 && typeof arguments[5] !== 'boolean' && arguments[5] !== null) {\r\n\t\tthrow new $TypeError('`nonConfigurable`, if provided, must be a boolean or null');\r\n\t}\r\n\tif (arguments.length > 6 && typeof arguments[6] !== 'boolean') {\r\n\t\tthrow new $TypeError('`loose`, if provided, must be a boolean');\r\n\t}\r\n\r\n\tvar nonEnumerable = arguments.length > 3 ? arguments[3] : null;\r\n\tvar nonWritable = arguments.length > 4 ? arguments[4] : null;\r\n\tvar nonConfigurable = arguments.length > 5 ? arguments[5] : null;\r\n\tvar loose = arguments.length > 6 ? arguments[6] : false;\r\n\r\n\t/* @type {false | TypedPropertyDescriptor<unknown>} */\r\n\tvar desc = !!gopd && gopd(obj, property);\r\n\r\n\tif ($defineProperty) {\r\n\t\t$defineProperty(obj, property, {\r\n\t\t\tconfigurable: nonConfigurable === null && desc ? desc.configurable : !nonConfigurable,\r\n\t\t\tenumerable: nonEnumerable === null && desc ? desc.enumerable : !nonEnumerable,\r\n\t\t\tvalue: value,\r\n\t\t\twritable: nonWritable === null && desc ? desc.writable : !nonWritable\r\n\t\t});\r\n\t} else if (loose || (!nonEnumerable && !nonWritable && !nonConfigurable)) {\r\n\t\t// must fall back to [[Set]], and was not explicitly asked to make non-enumerable, non-writable, or non-configurable\r\n\t\tobj[property] = value; // eslint-disable-line no-param-reassign\r\n\t} else {\r\n\t\tthrow new $SyntaxError('This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.');\r\n\t}\r\n};\r\n"]}